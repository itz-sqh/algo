name: Verify Code

on: [push, pull_request]

jobs:
  set-lint-matrix:
    runs-on: ubuntu-latest
    outputs:
      lint-matrix: ${{ steps.set-lint-matrix.outputs.lint-matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Find header files for linting
        id: set-lint-matrix
        run: |
          list=$(find test/ -type f -name "*.hpp" -print0 | xargs -0 -I {} echo '"{}"' | jq -sc '.')
          
          if [ "$list" = "[]" ]; then
            list='[""]'
          fi
          
          echo "lint-matrix=$list" >> $GITHUB_OUTPUT
          echo "Generated lint matrix: $list"

  lint:
    runs-on: ubuntu-latest
    needs: [set-lint-matrix]
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.set-lint-matrix.outputs.lint-matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install clang-format
        run: |
          sudo add-apt-repository 'deb http://apt.llvm.org/noble/ llvm-toolchain-noble main'
          sudo apt update
          sudo apt install -y clang-format
      - name: Run linting
        run: |
          if [ -n "${{ matrix.target }}" ] && [ "${{ matrix.target }}" != "" ]; then
            clang-format --dry-run -style=file --Werror "${{ matrix.target }}"
          else
            echo "No header files found, skipping linting"
          fi

  set-run-matrix:
    runs-on: ubuntu-latest
    needs: [lint]  # Зависит от job lint
    outputs:
      run-matrix: ${{ steps.set-run-matrix.outputs.run-matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Find test files
        id: set-run-matrix
        run: |
          list=$(find test/ -type f -name "*.test.cpp" -print0 | xargs -0 -I {} echo '"{}"' | jq -sc '.')
          
          if [ "$list" = "[]" ]; then
            list='[""]'
          fi
          
          echo "run-matrix=$list" >> $GITHUB_OUTPUT
          echo "Generated test matrix: $list"

  build:
    runs-on: ubuntu-latest
    needs: [set-run-matrix]
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        testcase: ${{ fromJson(needs.set-run-matrix.outputs.run-matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ make python3-pip jq
          pip3 install online-judge-verify-helper
      - name: Verify code
        timeout-minutes: 8
        run: |
          if [ -n "${{ matrix.testcase }}" ] && [ "${{ matrix.testcase }}" != "" ]; then
            oj-verify run "${{ matrix.testcase }}"
          else
            echo "No test files found, skipping"
          fi

  verify_check:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: echo "All tests passed!!"